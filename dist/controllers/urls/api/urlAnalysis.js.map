{"version":3,"file":"urlAnalysis.js","sourceRoot":"","sources":["../../../../src/controllers/urls/api/urlAnalysis.ts"],"names":[],"mappings":";;;;;;AAEA,wFAA+D;AAC/D,6DAAgE;AAEzD,MAAM,WAAW,GAAmB,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IAClE,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAA;QAElC,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;QACvB,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,IAAA,oCAAoB,EAAC,OAAO,CAAC,CAAA;QAElD,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAA;IAClC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,mBAAS,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC,CAAA;IACtC,CAAC;AACH,CAAC,CAAA;AAdY,QAAA,WAAW,eAcvB","sourcesContent":["import type { RequestHandler } from 'express'\n\nimport HttpError from '../../../utils/error-handlers/HttpError'\nimport { getUrlByIdController } from '../services/urlsAnalytics'\n\nexport const urlAnalysis: RequestHandler = async (req, res, next) => {\n  try {\n    const shortId = req.params.shortId\n\n    if (!shortId) {\n      res.redirect('/user')\n    }\n\n    const result = await getUrlByIdController(shortId)\n\n    res.redirect(result.redirectUrl)\n  } catch (error) {\n    next(new HttpError(`${error}`, 404))\n  }\n}\n"]}