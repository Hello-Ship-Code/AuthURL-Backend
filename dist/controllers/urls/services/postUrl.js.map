{"version":3,"file":"postUrl.js","sourceRoot":"","sources":["../../../../src/controllers/urls/services/postUrl.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA6B;AAE7B,yDAAkD;AAElD,wFAA+D;AAExD,MAAM,OAAO,GAAG,KAAK,EAAE,WAAmB,EAAE,MAAc,EAAE,EAAE;IACnE,IAAI,CAAC;QACH,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,MAAM,IAAI,mBAAS,CAAC,eAAe,EAAE,GAAG,CAAC,CAAA,CAAC,sCAAsC;QAClF,CAAC;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,mBAAS,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAA;QACjD,CAAC;QAED,MAAM,OAAO,GAAG,iBAAO,CAAC,QAAQ,EAAE,CAAA;QAElC,MAAM,MAAM,GAAG,MAAM,kBAAM,CAAC,GAAG,CAAC,MAAM,CAAC;YACrC,IAAI,EAAE;gBACJ,OAAO;gBACP,MAAM;gBACN,WAAW;aACZ;YACD,OAAO,EAAE;gBACP,YAAY,EAAE,IAAI,EAAE,uBAAuB;aAC5C;SACF,CAAC,CAAA;QAEF,OAAO,MAAM,CAAA,CAAC,0DAA0D;IAC1E,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAA,CAAC,oBAAoB;QACtE,MAAM,IAAI,mBAAS,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAA,CAAC,0BAA0B;IAC7E,CAAC;AACH,CAAC,CAAA;AA3BY,QAAA,OAAO,WA2BnB","sourcesContent":["import shortid from 'shortid'\n\nimport { prisma } from '../../../config/db.config'\n\nimport HttpError from '../../../utils/error-handlers/HttpError'\n\nexport const postUrl = async (redirectUrl: string, userId: string) => {\n  try {\n    if (!redirectUrl) {\n      throw new HttpError('URL not found', 400) // 400 is better for validation errors\n    }\n    if (!userId) {\n      throw new HttpError('User ID is required', 400)\n    }\n\n    const shortId = shortid.generate()\n\n    const newUrl = await prisma.url.create({\n      data: {\n        shortId,\n        userId,\n        redirectUrl,\n      },\n      include: {\n        visitHistory: true, // Fixed capitalization\n      },\n    })\n\n    return newUrl // Returning the created URL for better use in controllers\n  } catch (error) {\n    console.error('Error creating short URL:', error) // Log for debugging\n    throw new HttpError('Failed to create URL', 500) // Use a general 500 error\n  }\n}\n"]}