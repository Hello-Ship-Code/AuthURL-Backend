{"version":3,"file":"HttpError.js","sourceRoot":"","sources":["../../../src/utils/error-handlers/HttpError.ts"],"names":[],"mappings":";;AAAA,MAAqB,SAAU,SAAQ,KAAK;IAC1C,UAAU,CAAQ;IAElB,YAAY,OAAe,EAAE,UAAkB;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA,CAAC,iCAAiC;QAEtE,wDAAwD;QACxD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAA;IAClD,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,OAAe,EAAE,MAAc;QACzC,OAAO,IAAI,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA,CAAC,wBAAwB;IACxE,CAAC;CACF;AAdD,4BAcC","sourcesContent":["export default class HttpError extends Error {\n  statusCode: number\n\n  constructor(message: string, statusCode: number) {\n    super(message)\n    this.statusCode = Number(statusCode) // Ensure it's a primitive number\n\n    // Set prototype explicitly to support instanceof checks\n    Object.setPrototypeOf(this, HttpError.prototype)\n  }\n\n  static from(message: string, status: number): HttpError {\n    return new HttpError(message, Number(status)) // Ensure primitive type\n  }\n}\n"]}