{"version":3,"file":"error.handler.js","sourceRoot":"","sources":["../../../src/utils/error-handlers/error.handler.ts"],"names":[],"mappings":";;;AAGO,MAAM,YAAY,GAAG,CAAC,KAAU,EAAE,IAAa,EAAE,GAAa,EAAE,KAAmB,EAAE,EAAE;IAC5F,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,CAAA,CAAC,4BAA4B;IAC/E,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,uBAAuB,CAAA;IAExD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;QAC1B,OAAO,EAAE,KAAK;QACd,UAAU;QACV,OAAO;QACP,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;KACxE,CAAC,CAAA;AACJ,CAAC,CAAA;AAVY,QAAA,YAAY,gBAUxB","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { type Request, type Response, type NextFunction } from 'express'\n\nexport const errorHandler = (error: any, _req: Request, res: Response, _next: NextFunction) => {\n  const statusCode = Number(error.statusCode) || 500 // âœ… Ensure primitive number\n  const message = error.message || 'Internal Server Error'\n\n  res.status(statusCode).json({\n    success: false,\n    statusCode,\n    message,\n    error: process.env.NODE_ENV === 'development' ? error.stack : undefined,\n  })\n}\n"]}